@using StoreDSWI.Web.Code
@model ShopViewModels
@{
    ViewBag.Title = "Index";
}


<!-- breadcrumb-area start -->
<div class="breadcrumb-area">
    <div class="container">
        <div class="row align-items-center justify-content-center">
            <div class="col-12 text-center">
                <h2 class="breadcrumb-title">PRODUCTOS</h2>
            </div>
        </div>
    </div>
</div>
<!-- breadcrumb-area end -->

<!--========================================>
LISTAR PRODUCTOS
==========================================-->
<!-- products -->
<div class="products">
    <div class="container">
        <div class="col-md-9 product-w3ls-right">   

            <div class="product-top">
                <ul>
                    <li class="dropdown head-dpdn">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">Filtrar por:<span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li><a data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.Default, categoryID = Model.CategoryID })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Default ? "active" : string.Empty : string.Empty)">Predeterminado - lo más nuevo</a></li>
                            <li><a data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.Popularity, categoryID = Model.CategoryID })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Popularity ? "active" : string.Empty : string.Empty)">Populares</a></li>
                            <li><a data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.PriceLowToHigh, categoryID = Model.CategoryID })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceLowToHigh ? "active" : string.Empty : string.Empty)">Menor - Mayor precio</a></li>
                            <li><a data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.PriceHighToLow, categoryID = Model.CategoryID })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceHighToLow ? "active" : string.Empty : string.Empty)">Mayor - Menor precio</a></li>
                        </ul>
                    </li>
                    <li class="dropdown head-dpdn">
                        <a href="@Url.Action("Index", "Shop")" class="btn btn-danger">Reiniciar Filtro</a>
                    </li>
                    <li class="pull-right">
                        <p style="margin: 4px;color: #ddd;">
                            Mostrando @(((Model.Pager.CurrentPage - 1) * Model.Pager.PageSize) + 1) - @(((Model.Pager.CurrentPage - 1) * Model.Pager.PageSize) + (Model.Products.Count < Model.Pager.PageSize ? Model.Products.Count : Model.Pager.PageSize)) de @Model.Pager.TotalItems productos
                        </p>
                    </li>
                </ul>
                <div class="clearfix"> </div>
            </div>

            <div id="productsDiv">
                @{
                    var filterProductsViewModels = new FilterProductsViewModels();
                    filterProductsViewModels.Products = Model.Products;
                    filterProductsViewModels.Pager = Model.Pager;
                    filterProductsViewModels.CategoryID = Model.CategoryID;
                    filterProductsViewModels.SortBy = Model.SortBy;

                    Html.RenderPartial("FilterProducts", filterProductsViewModels);

                }
            </div>
        </div>
        <div class="col-md-3 rsidebar">
            <!--<div class="widget widget-price related-row header-search">
                <form>
                    <input type="search" name="Search" placeholder="Buscar un producto..." required="">
                    <input type="search" class="search-field" placeholder="Buscar un producto…" value="@Model.SearchTerm" name="searchTerm" required="">
                    <!--<button type="submit" class="btn btn-default" aria-label="Left Align">
                        <i class="fa fa-search" aria-hidden="true"> </i>
                    </button>
                </form>
            </div>-->

            <div class="widget widget-price">
                <h5 class="widget-title">Filtro por precio</h5>
                <div class="price-filter">
                    <div id="slide-range"></div>
                    <p class="amount">
                        Precio: <input type="text" id="amount" disabled="">
                    </p>
                </div>
            </div>

            @*<div class="related-row">
                <h4>Categorias destacadas</h4>
                <ul>
                    @foreach (var category in Model.FeaturedCategories)
                    {
                        <li><a data-href="@Url.Action("FilterProducts","Shop", new { categoryID = category.ID, sortBy = Model.SortBy })" class="dataLink @(Model.CategoryID.HasValue && Model.CategoryID.Value == category.ID ? "active" : string.Empty)">@category.Name</a></li>
                    }
                </ul>
            </div>*@
        </div>
        <div class="clearfix"> </div>
    </div>
</div>


<script>

    var callTimeout;
    var priceSlider = $("#slide-range").slider({
        range: true,
        min: 0,
        max: @Model.MaximumPrice,
        values: [0, @Model.MaximumPrice],
        slide: function (event, ui) {
            var minPrice = ui.values[0];
            var maxPrice = ui.values[1];

            $("#amount").val("S/ " + minPrice + ".00" + " - " + "S/ " + maxPrice + ".00");

            clearTimeout(callTimeout);
            callTimeout = setTimeout(PriceRangeChange, 500);
        }
    });

    $(".dataLink").click(function () {
        var url = $(this).attr("data-href");

        if (url != "" || url != undefined) {
            GetData(url);
        }
    });

    function GetData(dUrl) {
        /*showLoader();*/

        $.ajax({
            url: dUrl,
            data: {
                minimumPrice: priceSlider.slider("values", 0),
                maximumPrice: priceSlider.slider("values", 1)
            }
        })
        .done(function (response) {
            $("#productsDiv").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FALLÓ");
        });
        //.always(function(){
        //    hideLoader();
        //});
    }

    function PriceRangeChange() {
        $.ajax({
            url: '@Url.Action("FilterProducts", "Shop")',
            data: {
                searchTerm: $("#SearchTerm").val(),
                SortBy: $("#SortBy").val(),
                categoryID: $("#CategoryID").val(),
                minimumPrice: priceSlider.slider("values", 0),
                maximumPrice: priceSlider.slider("values", 1)
            }
        })
        .done(function (response) {
            $("#productsDiv").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FALLÓ");
        });
    }

</script>



