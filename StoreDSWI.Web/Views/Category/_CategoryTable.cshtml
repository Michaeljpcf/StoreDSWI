@model CategorySearchViewModel


<div class="col-md-12">
    <form method="post">
        <div class="col-md-8">
            <div class="input-group form-group">
                <input class="form-control" id="searchTxt" name="Search" style="padding: 23px;" />
                <div class="input-group-btn">
                    <button type="button" class="btn btn-default" id="searchBtn">Buscar</button>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <button type="button" class="btn btn-primary text-uppercase" id="resetBtn">Resetear</button>
        </div>
    </form>
</div>
<div class="col-md-12 mb-20" style="margin-bottom: 30px;">
    <button type="button" class="btn btn-primary text-uppercase" id="newBtn">Nueva Categoría</button>
</div>


<table class="table table-striped table-bordered text-center" style="font-size: 17px;">
    <thead>
        <tr style="font-weight:700;">
            <td>Nombre Categoría</td>
            <td>Cantidad Productos</td>
            <td>Accciones</td>
        </tr>
    </thead>
    <tbody>
        @if (Model.Categories != null && Model.Categories.Count > 0)
        {
            foreach (var category in Model.Categories)
            {
                <tr>
                    <td>@category.Name</td>
                    <td>
                        @category.Products.Count
                    </td>
                    <td>
                        <button class="editBtn btn btn-primary text-uppercase" style="margin-right: 15px;" data-id="@category.ID">Editar</button>
                        <button class="deleteBtn btn btn-default text-uppercase" data-id="@category.ID">Eliminar</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr><td colspan="3" class="text-danger">No se encontraron categorías.</td></tr>
        }
    </tbody>
</table>

<div>
    @if (Model.Pager != null)
    {
        if (Model.Pager.CurrentPage > 1)
        {
            <button class="btn btn-default pageButtons" data-pageno="1">Primero</button>
            <button class="btn btn-default pageButtons" data-pageno="@(Model.Pager.CurrentPage -1)">Anterior</button>
        }

        for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
        {
            string activeClass = Model.Pager.CurrentPage == page ? "active" : string.Empty;

            <button class="btn btn-default @activeClass pageButtons" data-pageno="@page">@page</button>
        }

        if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
        {
            <button class="btn btn-default pageButtons" data-pageno="@(Model.Pager.CurrentPage + 1)">Siguiente</button>
            <button class="btn btn-default pageButtons" data-pageno="@Model.Pager.EndPage">Último</button>
        }
    }
</div>


<script type="text/javascript">

    $(".pageButtons").click(function () {
        $.ajax({
            url: '@Url.Action("CategoryTable", "Category")',
            data: {
                pageNo: $(this).attr("data-pageNo"),                
                @* search: '@Model.SearchTerm' *@
            }
        })
        .done(function (response) {
            $("#tableContainer").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FALLÓ");
        });
    });

    $("#searchBtn").click(function () {
        var searchValue = $("#searchTxt").val();

        $.ajax({
            url: '@Url.Action("CategoryTable", "Category")',
            data: {
                search: searchValue
            }
        })
        .done(function (response) {
            $("#tableContainer").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FALLÓ");
        });
    });

    //
    $("#resetBtn").click(function () {
        var searchValue = '';

        $.ajax({
            url: '@Url.Action("CategoryTable", "Category")',
            data: {
                search: searchValue
            }
        })
        .done(function (response) {
            $("#tableContainer").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FALLÓ");
        });
    });

    //
    $("#newBtn").click(function () {
        $.ajax({
            url: '@Url.Action("Create", "Category")',
        })
        .done(function (response) {
            $("#actionContainer").html(response);

            focusAction("actionContainer");
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FALLÓ");
        });
    });
    //
    $(".editBtn").click(function () {
        $.ajax({
            url: '@Url.Action("Edit", "Category")',
            data: {
                ID: $(this).attr('data-id')
            }
        })
        .done(function (response) {
            $("#actionContainer").html(response);

            focusAction("actionContainer");
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FALLÓ");
        });
    });
    //
    $(".deleteBtn").click(function () {

        Swal.fire({
            title: "Eliminar Categoría",
            text: "¿Está seguro de que desea eliminar esta categoría?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: '#218838',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Si, Eliminar!',
            cancelButtonText: 'Cancelar!'
        })
        .then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Delete", "Category")',
                    data: {
                        ID: $(this).attr('data-id')
                    }
                })
                .done(function (response) {
                    $("#tableContainer").html(response);
                    Swal.fire(
                        'Eliminado!',
                        'La categoría a sido eliminada!',
                        'success'
                    )
                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("FALLÓ");
                });
            }
        });
    });
</script>


